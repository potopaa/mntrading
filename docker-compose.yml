services:
  minio:
    image: minio/minio:latest
    container_name: mntrading-minio
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - ./data/minio:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:9000/minio/health/live || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  setup-minio:
    image: minio/mc:latest
    container_name: mntrading-minio-setup
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb -p local/${MINIO_BUCKET} || true &&
      mc anonymous set private local/${MINIO_BUCKET} || true
      "
    restart: "no"

  mlflow:
    build: .
    container_name: mntrading-mlflow
    depends_on:
      - setup-minio
    working_dir: /app
    environment:
      MLFLOW_S3_ENDPOINT_URL: ${MLFLOW_S3_ENDPOINT_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      MINIO_BUCKET: ${MINIO_BUCKET}
    command: [
      "mlflow","server",
      "--host","0.0.0.0",
      "--port","5000",
      "--backend-store-uri","sqlite:////app/mlflow/mlflow.db",
      "--artifacts-destination","s3://${MINIO_BUCKET}",
      "--gunicorn-opts","--timeout 300"
    ]
    ports:
      - "${MLFLOW_PORT}:5000"
    volumes:
      - ./mlflow:/app/mlflow


  app:
    build: .
    container_name: mntrading-app
    depends_on:
      - mlflow
    environment:
      MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}
      MLFLOW_S3_ENDPOINT_URL: ${MLFLOW_S3_ENDPOINT_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      MLFLOW_REGISTER: "1"
    volumes:
      - .:/app
      - ./data:/app/data
      - ./mlruns:/app/mlruns

  streamlit:
    build: .
    container_name: mntrading-ui
    depends_on:
      - app
    restart: unless-stopped
    environment:
      MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}
      MLFLOW_S3_ENDPOINT_URL: ${MLFLOW_S3_ENDPOINT_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      STREAMLIT_SERVER_HEADLESS: "true"
      STREAMLIT_BROWSER_GATHERUSAGESTATS: "false"
    command: >
      bash -lc "
        set -e;
        APP_PATH='';
        for p in ui/streamlit_app.py mntrading/ui/streamlit_app.py; do
          if [ -f \"$$p\" ]; then APP_PATH=\"$$p\"; break; fi
        done
        if [ -z \"$$APP_PATH\" ]; then echo '[ui] streamlit_app.py not found'; ls -la; exit 1; fi
        echo \"[ui] starting $$APP_PATH\";
        exec streamlit run \"$$APP_PATH\" \
          --server.address 0.0.0.0 \
          --server.port ${STREAMLIT_PORT}
      "
    ports:
      - "${STREAMLIT_PORT}:${STREAMLIT_PORT}"
    volumes:
      - .:/app
      - ./data:/app/data
