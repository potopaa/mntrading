services:
  minio:
    image: minio/minio:latest
    container_name: mntrading-minio
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - ./data/minio:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:9000/minio/health/live || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  setup-minio:
    image: minio/mc:latest
    container_name: mntrading-minio-setup
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb -p local/${MINIO_BUCKET} || true &&
      mc anonymous set private local/${MINIO_BUCKET} || true
      "
    restart: "no"

  mlflow:
    build: .
    container_name: mntrading-mlflow
    depends_on:
      - setup-minio
    working_dir: /app
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER:-admin}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD:-adminadmin}
      AWS_DEFAULT_REGION: us-east-1
      MINIO_BUCKET: ${MINIO_BUCKET:-mlflow}
      MLFLOW_ARTIFACTS_DESTINATION: s3://${MINIO_BUCKET:-mlflow}/experiments
    command: [
      "mlflow","server",
      "--host","0.0.0.0",
      "--port","5000",
      "--backend-store-uri","sqlite:////app/mlflow/mlflow.db",
      "--artifacts-destination","s3://${MINIO_BUCKET}",
      "--gunicorn-opts","--timeout 300"
    ]
    ports:
      - "${MLFLOW_PORT}:5000"
    volumes:
      - ./mlflow:/app/mlflow

  # NEW: FastAPI server (см. api/server.py)
  api:
    build: .
    container_name: mntrading-api
    depends_on:
      - mlflow
    environment:
      MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}
      MLFLOW_S3_ENDPOINT_URL: ${MLFLOW_S3_ENDPOINT_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
    command: >
      bash -lc "
        exec uvicorn api.server:app --host 0.0.0.0 --port 8000
      "
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - .:/app
      - ./data:/app/data
      - ./mlruns:/app/mlruns

  app:
    build: .
    container_name: mntrading-app
    depends_on:
      - mlflow
    environment:
      MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}
      MLFLOW_S3_ENDPOINT_URL: ${MLFLOW_S3_ENDPOINT_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      MLFLOW_REGISTER: "1"
    volumes:
      - .:/app
      - ./data:/app/data
      - ./mlruns:/app/mlruns
    command: ["bash","-lc","tail -f /dev/null"]

  streamlit:
    command: >
      bash -lc "streamlit run $APP_PATH --server.address 0.0.0.0 --server.port 8501"
    environment:
      - APP_PATH=ui/streamlit_app.py
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=adminadmin
      - AWS_DEFAULT_REGION=us-east-1
      - MINIO_BUCKET=mlflow
      - MINIO_PREFIX=mntrading/
    ports:
      - "8501:8501"
    depends_on:
      - app
      - mlflow
      - minio
