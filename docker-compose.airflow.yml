x-airflow-common: &airflow-common
  image: apache/airflow:2.9.2-python3.12
  user: "50000:0"
  env_file:
    - .env
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
    AIRFLOW__WEBSERVER__SECRET_KEY: "mntrading-secret-key"
    MLFLOW_TRACKING_URI: http://mlflow:5000
    MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    AWS_ACCESS_KEY_ID: admin
    AWS_SECRET_ACCESS_KEY: adminadmin
    AWS_DEFAULT_REGION: us-east-1
    PYTHONPATH: /app
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./:/app
  working_dir: /opt/airflow
  networks:
    - mntrading

services:
  airflow-db:
    image: postgres:14-alpine
    container_name: mntrading-airflow-db
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mntrading
    restart: unless-stopped

  airflow-init:
    <<: *airflow-common
    container_name: mntrading-airflow-init
    entrypoint: /bin/bash
    command: >
      -lc "
      pip install --no-cache-dir -r /app/requirements.txt || true;
      airflow db migrate &&
      airflow users create --role Admin --username admin --password admin --firstname A --lastname F --email admin@example.com || true
      "
    depends_on:
      - airflow-db
    restart: "no"

  airflow-webserver:
    <<: *airflow-common
    container_name: mntrading-airflow
    command: >
      bash -lc "
      pip install --no-cache-dir -r /app/requirements.txt || true;
      exec airflow webserver
      "
    depends_on:
      - airflow-init
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  airflow-scheduler:
    <<: *airflow-common
    container_name: mntrading-airflow-scheduler
    command: >
      bash -lc "
      pip install --no-cache-dir -r /app/requirements.txt || true;
      exec airflow scheduler
      "
    depends_on:
      - airflow-init
    restart: unless-stopped

volumes:
  airflow-db-data:

networks:
  mntrading:
    external: true
    name: mntrading_default
